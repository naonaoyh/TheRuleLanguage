package RuleLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"RuleLanguage.structure.Action", "RuleLanguage.structure.BooleanRuleData", "RuleLanguage.structure.Condition", "RuleLanguage.structure.Enum", "RuleLanguage.structure.EnumRuleDate", "RuleLanguage.structure.NumberRuleData", "RuleLanguage.structure.Rule", "RuleLanguage.structure.RuleData", "RuleLanguage.structure.RuleDataRefrence", "RuleLanguage.structure.RuleDataValidDependRefrence", "RuleLanguage.structure.RuleDateFilterbyRefrence", "RuleLanguage.structure.RuleSet"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("RuleLanguage.structure.Action", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("RuleLanguage.structure.BooleanRuleData", "RuleLanguage.structure.RuleData", false, new String[]{"RuleLanguage.structure.RuleData", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("RuleLanguage.structure.Condition", "jetbrains.mps.baseLanguage.structure.Expression", false, new String[]{"jetbrains.mps.baseLanguage.structure.Expression"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("RuleLanguage.structure.Enum", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("RuleLanguage.structure.EnumRuleDate", "RuleLanguage.structure.RuleData", false, new String[]{"RuleLanguage.structure.RuleData", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"filterby"});
      case 5:
        return new CompiledConceptDescriptor("RuleLanguage.structure.NumberRuleData", "RuleLanguage.structure.RuleData", false, new String[]{"RuleLanguage.structure.RuleData", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 6:
        return new CompiledConceptDescriptor("RuleLanguage.structure.Rule", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 7:
        return new CompiledConceptDescriptor("RuleLanguage.structure.RuleData", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{"type"}, new String[]{});
      case 8:
        return new CompiledConceptDescriptor("RuleLanguage.structure.RuleDataRefrence", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"ruleData"});
      case 9:
        return new CompiledConceptDescriptor("RuleLanguage.structure.RuleDataValidDependRefrence", "RuleLanguage.structure.RuleDataRefrence", false, new String[]{"RuleLanguage.structure.RuleDataRefrence"}, new String[]{}, new String[]{"booleanRuleData"});
      case 10:
        return new CompiledConceptDescriptor("RuleLanguage.structure.RuleDateFilterbyRefrence", "RuleLanguage.structure.RuleDataRefrence", false, new String[]{"RuleLanguage.structure.RuleDataRefrence"}, new String[]{}, new String[]{"enumRuleDate"});
      case 11:
        return new CompiledConceptDescriptor("RuleLanguage.structure.RuleSet", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
